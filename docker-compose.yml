version: '3.6'
services:
#  nginx:
#    image: nginx
#    container_name: nginx
#    restart: always
#    depends_on:
#      - ustreamer
#      - tinypilot
#    ports:
#      - "8900:8900"
#    volumes:
#      - ./nginx-ingress/tinypilot.conf:/etc/nginx/nginx.conf  # nginx 설정 파일을 직접 nginx.conf로 마운트

  ustreamer:
    #build:
      #context: ./images/ustreamer/
    image: harbor.192.168.0.110.nip.io/tinypilot/ustreamer:latest
    container_name: ustreamer
    restart: always
    ports:
      - "8001:8001"
    devices:
      - /dev/video0:/dev/video0
    command: ["ustreamer", "--host=0.0.0.0", "--resolution=1920x1080","--encoder=hw", "--format=mjpeg", "--port=8001", "/dev/video0"] #1280x720

  tinypilot:
   # build:
   #   context: ./images/tinypilot/
    image: harbor.192.168.0.110.nip.io/tinypilot/tinypilot:latest
    container_name: tinypilot
    restart: always
    ports:
      - "8000:8000"
    devices:
     - /dev/hidg0:/dev/hidg0
     - /dev/hidg1:/dev/hidg1
    volumes:
      - ./config/config.py:/opt/tinypilot/config.py  # Tinypilot 설정 파일 마운트

    command: ["python3", "/opt/tinypilot/app/main.py"]

  # --- 추가된 Tailscale 서비스 ---
  tailscale:
   # build:
   #   context: ./images/tailscale  # Dockerfile이 있는 위치를 지정
    image: harbor.192.168.0.110.nip.io/tinypilot/tailscale:latest
    container_name: tailscale
    restart: always
    hostname: ${TS_HOSTNAME}         # 컨테이너의 호스트 이름을 설정 (start.sh와 일치)
    # Tailscale이 작동하기 위해 필수적인 설정입니다.
    devices:
      - "/dev/net/tun:/dev/net/tun"  # 가상 네트워크 인터페이스 사용을 위해 필요
    cap_add:
      - net_admin                  # 네트워크 관리자 권한 부여
      - sys_module                 # 시스템 모듈 관련 권한 부여
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_HOSTNAME=${TS_HOSTNAME}
